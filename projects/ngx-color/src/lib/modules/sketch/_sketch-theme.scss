/*
 * Single mixin to be used as part of whole library theme.
 * For complete component styling use *-complete mixin.
 */
@mixin ngx-color-sketch-theme($theme) {
    $primary: map-get($theme, primary);
    $foreground: map-get($theme, foreground);
    $background: map-get($theme, background);
    .ngx-color-sketch {
        .ngx-color-sketch-picker {
            background-color: mat-color($background, card);
            color: mat-color($foreground, text);
            @include mat-elevation(8);
        }
        .ngx-color-sketch-active {
            box-shadow: mat-color($foreground, secondary-text) 0px 0px 0px 1px inset, mat-color($foreground, secondary-text) 0px 0px 4px inset;
        }
        .ngx-color-editable-input {
            .ngx-color-editable-input-value {
                box-shadow: inset 0 0 0 1px mat-color($foreground, secondary-text);
            }
        }
        .ngx-color-sketch-preset-colors {
            .ngx-color-sketch-preset-colors-sketch-swatches {
                border-top: 1px solid map-get($mat-grey, 300);
            }
            .ngx-color-swatch {
                .ngx-color-swatch-swatch {
                    box-shadow: inset 0 0 0 1px mat-color($foreground, secondary-text);
                }
            }
        }
    }
}

/*
 * Complete mixin to be used as standalone styling for whole component.
 * Includes other component mixins which this component uses in its template.
 */
@mixin ngx-color-sketch-theme-complete($theme) {
    .ngx-color-sketch {
        @include ngx-color-hue-theme($theme);
        @include ngx-color-alpha-theme($theme);
        @include ngx-color-checkboard-theme($theme);
        @include ngx-color-editable-input-theme($theme);
    }
    @include ngx-color-sketch-theme($theme);
}