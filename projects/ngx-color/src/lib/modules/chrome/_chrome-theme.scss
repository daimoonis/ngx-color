/*
 * Single mixin to be used as part of whole library theme.
 * For complete component styling use *-complete mixin.
 */
@mixin ngx-color-chrome-theme($theme) {
    $primary: map-get($theme, primary);
    $foreground: map-get($theme, foreground);
    $background: map-get($theme, background);
    .ngx-color-chrome {
        .ngx-color-chrome-picker {
            background-color: mat-color($background, card);
            color: mat-color($foreground, text);
            @include mat-elevation(8);
        }
        .ngx-color-chrome-active {
            box-shadow: inset 0 0 0 1px mat-color($foreground, secondary-text);
        }
        .ngx-color-chrome-fields-toggle-svg {
            @if map-get($theme, is-dark) {
                background-color: map-get($mat-grey, 600);
            }
            @else {
                background-color: map-get($mat-grey, 100);
            }
        }
        .ngx-color-chrome-fields-toggle-svg:hover {
            background-color: map-get($mat-grey, 300);
        }
    }
}

/*
 * Complete mixin to be used as standalone styling for whole component.
 * Includes other component mixins which this component uses in its template.
 */
 @mixin ngx-color-chrome-theme-complete($theme) {
    .ngx-color-chrome {
        @include ngx-color-hue-theme($theme);
        @include ngx-color-alpha-theme($theme);
        @include ngx-color-checkboard-theme($theme);
        @include ngx-color-editable-input-theme($theme);
    }
    @include ngx-color-chrome-theme($theme);
}